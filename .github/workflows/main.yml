from flask import Flask, request, jsonify
from twilio.twiml.messaging_response import MessagingResponse
import openai
import os
import random

app = Flask(__name__)

openai.api_key = os.getenv("OPENAI_API_KEY")

# Frases motivacionales estilo barber√≠a urbana
motivational_phrases = [
    "Cada corte es una oportunidad para crear arte y confianza. ¬°Vamos con todo!",
    "La vida se peina con actitud, hermano. Aqu√≠ te respondo al cien.",
    "Tu estilo habla m√°s fuerte que mil palabras. ¬°Sigue brillando!",
    "El √©xito no se improvisa, se construye paso a paso, como un fade perfecto.",
    "Aqu√≠ GAFE, siempre afilado, para que tu d√≠a est√© a la altura."
]

@app.route("/webhook", methods=["POST"])
def webhook():
    incoming_msg = request.values.get('Body', '').strip()
    resp = MessagingResponse()
    msg = resp.message()

    if not incoming_msg:
        msg.body("Ey, no recib√≠ nada. Manda tu mensaje y te contesto con todo el flow.")
        return str(resp)

    # Consulta a OpenAI GPT-4
    try:
        completion = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": "Eres un asistente amable, profesional, con estilo urbano y motivador."},
                {"role": "user", "content": incoming_msg}
            ],
            max_tokens=150,
            temperature=0.7
        )
        reply = completion.choices[0].message.content.strip()
    except Exception as e:
        reply = "Oops, algo pas√≥ con la conexi√≥n a la inteligencia artificial. Intenta de nuevo m√°s tarde."

    # A√±ade una frase motivacional al final (aleatoria)
    motivational = random.choice(motivational_phrases)
    full_reply = f"{reply}\n\nüíà {motivational}"

    msg.body(full_reply)
    return str(resp)

if __name__ == "__main__":
    app.run(debug=True)





    flask
twilio
openai


web: python app.py


# Chatbot WhatsApp GPT - Barber√≠a GAFE

Este proyecto es un chatbot para WhatsApp que usa la API de OpenAI GPT-4, conectado v√≠a Twilio, con respuestas motivacionales estilo barber√≠a urbana.

## Variables de entorno necesarias

- OPENAI_API_KEY: Tu clave API de OpenAI
- TWILIO_ACCOUNT_SID: SID de tu cuenta Twilio
- TWILIO_AUTH_TOKEN: Token de autenticaci√≥n Twilio
- FROM_PHONE: N√∫mero de WhatsApp de Twilio (ej: whatsapp:+14155238886)

## C√≥mo desplegar en Render

1. Crea un nuevo Web Service en [Render.com](https://render.com).
2. Conecta tu repositorio GitHub.
3. Configura las variables de entorno mencionadas.
4. Despliega y usa la URL para el webhook en Twilio.

## Configuraci√≥n en Twilio

- En el Sandbox de WhatsApp, configura el webhook de mensajes entrantes con la URL:
